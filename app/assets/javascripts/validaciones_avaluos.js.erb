/*INGRESAR SOLO NUMEROS*/
function isNumberKey(evt)
{
	var charCode = (evt.which) ? evt.which : event.keyCode
	var numCurrent = this.value + String.fromCharCode(charCode);
	/*PARA CONTROLAR EL RANGO DE NUMERO*/
	if(numCurrent>1000 || numCurrent<0) {
		return false;
	}
		
	/*PARA INGRESAR SOLO NUMEROS*/
    if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode!=46)
        return false;
		
	/*PARA CONTROLAR SOLO DECIMALES*/
	var regex = /^\d+(?:\.\d{0,2})$/;
	var numBack = this.value;
	for(i=0;i<numBack.length;i++){
		if (numBack[i]=="." && charCode!=8){
			var numStr = this.value + String.fromCharCode(charCode);
			if (regex.test(numStr))
				{}
				else
				{return false;}
		}
	}
		
	//var regex = /^\d+(?:\.\d{0,2})$/; var numStr = "123.20"; if (regex.test(numStr)) alert("Numero incorrecto: " + numStr);
		
	return true;
}
	  
/*CALCULAR AVALUO DE INMUEBLES*/
function calculoAvaluo(update_descrip_val, update_state_val)
{
	//VARIABLES PARA CONTROLAR EL CALCULO DE AVALUO
	var avaluos = document.getElementsByClassName("label_aval_descrip");
	var areas = document.getElementsByClassName("text_area");
	var unitarios = document.getElementsByClassName("text_val_unit");
	var totales = document.getElementsByClassName("text_val_tot");
	
	var selects_descriptions = document.getElementsByClassName("description_select");
    var descrips = document.getElementsByClassName("label_param_descrip");

    var selects_states = document.getElementsByClassName("state_select");
    var states = document.getElementsByClassName("label_met_nombre");
	
	for (var i = 0; i < avaluos.length; i++){
		$("#"+areas[i].id).keypress(isNumberKey);
		$("#"+unitarios[i].id).keypress(isNumberKey);
	}
	
	function actualizaTotales(current)
	{
		//CONTROL PARA ENCERAR CUANDO TEXTBOX ESTA VACIO
		if (areas[current].value == ""){
			areas[current].value = 0;
		}
		if (unitarios[current].value == ""){
			unitarios[current].value = 0;
		}
		//MULTIPLICA CADA FILA DE TABLA DE AVALUO
		$("#"+totales[current].id).val(parseFloat(areas[current].value) * parseFloat(unitarios[current].value));
		var valor_real = 0;
		for (var i = 0; i < totales.length; i++){
			valor_real = valor_real + parseFloat(totales[i].value) ;
		}
		$("#text_val_real").val(valor_real);
		//CALCULA LA SUMATORIA DE TODOS LOS TOTALES
		var val_real = $("#text_val_real").val();
		var sum_descrip = $("#text_sum_descrip").val();
		var sum_state = $("#text_sum_state").val();
		var sum_val_merc = parseFloat(val_real)+parseFloat(sum_descrip)+parseFloat(sum_state);
		$("#text_val_merc").val(parseFloat(sum_val_merc));
	}
	
	//AL INGRESAR UN VALOR EN AREAS O UNITARIOS, LLAMAR A LA FUNCION PARA ACTUALIZAR TOTALES
	for (var i = 0; i < avaluos.length; i++){
        $("#"+areas[i].id).change({arr_rec: i},function(event) {
			var current = event.data.arr_rec
			actualizaTotales(current);
		});
		$("#"+unitarios[i].id).change({arr_rec: i},function(event) {
			var current = event.data.arr_rec
			actualizaTotales(current);
		});
    }
	
	//PARA LAS DESCRIPCIONES DE LOS PARAMETROS
    for (var i = 0; i < selects_descriptions.length; i++) {
      var nombre = descrips[i].textContent;
      $('#'+selects_descriptions[i].id).change({nom: nombre},function(event) {
      $.ajax({
        url: update_descrip_val,
        data: {
          description_id : $(this).val(),
         parameter_id :  event.data.nom
        },
        dataType: "script"
      });
    });
    }

    //PARA LOS VALORES DE LAS DEPRECIACIONES
    for (var i = 0; i < selects_states.length; i++) {
      var nombre = states[i].textContent;
      $('#'+selects_states[i].id).change({nom: nombre},function(event) {
      $.ajax({
        url: update_state_val,
        data: {
          state_id : $(this).val(),
         rebate_id :  event.data.nom
        },
        dataType: "script"
      });
    });
      
    }
}